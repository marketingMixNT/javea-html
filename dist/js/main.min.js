"use strict";var nav=document.querySelector(".desktop-nav-container"),logo=document.querySelector(".logo-nav"),height=250,filterItem=(window.addEventListener("scroll",function(){var e=window.scrollY;logo.style.display=height<=e?"block":"none"}),document.querySelector(".items-links")),filterImages=document.querySelectorAll(".project-img"),filterInfo=document.querySelector(".info"),footerYearSpan=(filterItem&&0<filterImages.length&&window.addEventListener("load",function(){var n="a3a";filterImages.forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n?"block":"none"}),filterInfo&&filterInfo.querySelectorAll("[data-name]").forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n?"block":"none"}),filterItem.querySelector('[data-name="'.concat(n,'"]')).classList.add("menu-active"),filterItem.addEventListener("click",function(e){var n;e.target.classList.contains("item-link")&&(document.querySelector(".menu-active").classList.remove("menu-active"),e.target.classList.add("menu-active"),n=e.target.getAttribute("data-name"),filterImages.forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n||"all"===n?"block":"none"}),filterInfo)&&filterInfo.querySelectorAll("[data-name]").forEach(function(e){var t=e.getAttribute("data-name");e.style.display=t===n||"all"===n?"block":"none"})})}),document.querySelector(".footer__year")),date=new Date,currentYear=date.getFullYear(),images=(footerYearSpan&&(footerYearSpan.innerHTML=currentYear),window.onload=function(){document.getElementById("loader").style.display="none",document.querySelectorAll(".gallery-image").forEach(function(e){e.style.display="block"})},document.addEventListener("DOMContentLoaded",function(){var t=document.getElementById("rooms-container"),e=Array.from(t.children).sort(function(){return.5-Math.random()});t.innerHTML="",e.forEach(function(e){return t.appendChild(e)})}),["bg-1","bg-2"]),index=0,hero=document.querySelector("#hero"),changeBackground=function(){images.forEach(function(e){hero.classList.remove(e)}),hero.classList.add(images[index]),index=(index+1)%images.length};hero&&setInterval(changeBackground,5e3),window.addEventListener("scroll",function(){var e=document.querySelector("#nav-bottom");400<=window.scrollY?e.classList.add("show"):e.classList.remove("show")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
